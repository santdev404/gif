{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAyB7C,OACI,sBAAMC,SAfW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA1Ba,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAIKI,MAAOF,GAJZ,cAIbG,EAJa,gBAMKA,EAAKC,OANV,uBAMZC,EANY,EAMZA,KAEDC,EAAYD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACf,MAAO,CACHC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QAZ1C,kBAmBZM,GAnBY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,yDAAf,UACI,qBACIC,IAAKf,EACLgB,IAAKN,IAET,4BAAIA,QCPHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAIGqB,EDhBwBK,CAAa1B,GAAhCa,EALuB,EAK5BN,KAAaa,EALe,EAKfA,QAQpB,OACI,qCACI,oBAAIJ,UAAU,yDAAd,SAAwEhB,IAEtEoB,GAAW,mBAAGJ,UAAU,wDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAKKH,EAAOJ,KAAK,SAAAC,GAAG,OAEP,cAAC,EAAD,eAEOA,GADEA,EAAIC,aE5BzBgB,EAAe,WAAM,MAIMzC,mBAAS,CAAE,cAJjB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAGQ2C,EAAWnB,KACP,SAAAT,GAAQ,OAEA,cAAC,EAAD,CAEIA,SAAYA,GADAA,Y,MCvBhD6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.34d5e96e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handeInputChange = (e) =>{\n\n        setInputValue(e.target.value);\n        \n    }\n\n\n    const handleSubmit = (e) =>{\n\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            // setCategories([...categories,  inputValue ])\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n\n        }\n\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={ handeInputChange }\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=20&api_key=JoYShQfNSlMpKtitVeb38Byzgn3jMSPg`;\n\n    const resp      = await fetch( url );\n\n    const {data}    = await resp.json();\n\n    const gifs      = data.map( img => {\n                        return {\n                            id:     img.id,\n                            title:  img.title,\n                            url:    img.images?.downsized_medium.url\n                        }\n                    });\n\n  \n\n    // setImages(gifs);\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n    \n\n    return (\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\n            <img \n                src={url}\n                alt={title}\n            />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n//import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    \n\n    \n    const {data:images, loading} = useFetchGifs(category);\n\n\n\n    \n\n   \n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__bounce animate__fadeIn\">{category}</h3> \n\n            { loading && <p className=\"card animate__animated animate__bounce animate__flash\" >Loading</p> } \n\n            <div className=\"card-grid\">\n            \n\n                \n\n                {images.map( img => \n\n                        (<GifGridItem \n                            key={ img.id }\n                            {...img}\n                            />)\n\n                    )\n                }\n                    \n                \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n\n        getGifs(category)\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                }) \n\n            } );\n\n    }, [category]);\n\n\n\n    return state;\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['Ragnar', 'targaryen', 'omniman']\n\n    const [categories, setCategories] = useState([ 'targaryen'])\n\n    // const handleAdd = () =>{\n    //     setCategories([...categories, 'Peaky'])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = {setCategories} />\n            <hr/>\n\n\n\n            <ol>\n\n                {\n                    categories.map(\n                        category => \n                            (\n                                <GifGrid \n                                    key      = {category}\n                                    category = {category}\n                                />\n                            )\n                        \n                    )\n                }\n\n            </ol>\n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}